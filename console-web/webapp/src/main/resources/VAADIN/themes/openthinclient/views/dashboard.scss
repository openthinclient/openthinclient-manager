@mixin dashboard-view {

  .dashboard-panel {
    position: relative;
    min-height: 100px;
    margin: 0 30px 30px 0;
    padding: 15px 15px 15px 100px;
    box-shadow: 1px 1px 2px 1px silver;
    border: 1px silver solid;
    border-radius: 3px;
    background: white;

    .v-label {
      white-space: normal;
    }

    .dashboard-panel-image-circle {
      background-color: #509DC9;
      //color: white;
      border-radius: 50%;
      //padding: 5px;

      img { // inject color into svg
        fill: white;
      }

    }

    .dashboard-panel-image {
      position: absolute;
      left: 15px;
      top: 10px;
      width: 66px;
    }

    .dashboard-panel-title {
      font-weight: bolder;
    }

    p {
      margin-top: 0;
    }

    .v-slot-content-panel-number-large {
      margin-top: -10px;
    }

    .content-panel-number-large {
      font-size: xx-large;
      color: #888888;
    }
  }

  .spark {
    float: left;
    text-align: center;
    width: 25%;
    padding: $v-layout-spacing-vertical $v-layout-spacing-horizontal;
    border-left: valo-border($strength: 0.3);
    line-height: 1.35;

    > tbody {
      display: inline-block;
    }

    &:first-child {
      border-left: none;
    }
  }

  .dashboard-panel-toolbar {
    padding: 1px 0 1px round($v-unit-size / 1.8);
    height: $v-unit-size + 2px;
    position: absolute;
    top: 0;
    left: 0;
  }

  .v-csslayout-dashboard-panels {
     margin-top:12px;
     margin-left:12px;
  }

  .dashboard-panels {

    display: flex;
    flex-flow: row wrap;

    .card {
      height: 100%;
      overflow: hidden;
      padding: $v-unit-size + 2px 0 0;
      position: relative;

      .v-table, .v-table-table {
        background: transparent;
      }
    }

    .dashboard-panel-slot {
      padding: round($view-padding / 3);
      min-height: 220px;
    }

    &[width-range~="0-700px"] {
      .dashboard-panel-slot {
        width: 100% !important;
      }
    }

    &[width-range~="701px-"] {
      .dashboard-panel-slot {
        width: 50% !important;
      }
    }

    &[height-range~="0-440px"] {
      .dashboard-panel-slot {
        height: 100%;
      }
    }

    &[height-range~="441px-"] {
      .dashboard-panel-slot {
        height: 40%;
      }
    }

    .dashboard-panel-slot.max {
      width: 100% !important;
      height: 100%;
      padding-top: 0;
      padding-bottom: 0;
    }

    .notes {
      .card {
        padding: $v-unit-size + 2px 0 0;
      }
    }
  }

  .notifications.v-window {
    overflow: visible !important;
    top: 2 * $v-unit-size !important;
    // right: $view-padding;
    left: 235px !important;
    max-width: 90%;

    $window-outline: $v-overlay-shadow;
    @if list-of-lists($window-outline) {
      $window-outline: last($v-overlay-shadow);
    }
    $window-outline: flatten-list(valo-bevel-and-shadow($bevel: null, $shadow: $window-outline));
    $outline-width: nth($window-outline, length($window-outline) - 1);
    $outline-color: last($window-outline);

    @include transform-origin(296px - (2 * $v-unit-size - round($v-unit-size / 3)) -7px);

    &.v-window-animate-in {
      @include animation(animate-in-scale-up 260ms cubic-bezier(.68,.37,.51,1.37));
    }

    &:before,
    &:after {
      content: "";
      position: absolute;
      top: -14px;
      right: 7 * $v-unit-size - round($v-unit-size / 3);
      border: 7px solid transparent;
      width: 0;
      height: 0;
      border-bottom-color: $v-window-background-color;
    }


    &:before {
      @if type-of($outline-width) == number and $outline-width > 0 {
        top: -15px - 2 * $outline-width;
        margin-right: -$outline-width;
        border-width: 7px + $outline-width;
        border-bottom-width: 8px;
        border-bottom-color: $outline-color;
      } @else {
        content: none;
      }
    }

    .v-window-header {
      color: $v-selection-color;
    }

    .v-window-outerheader:after,
    .v-scrollable:before {
      display: none;
    }

    .notification-item {
      font-size: round($v-font-size * 0.9);
    }

    .notification-title {
      font-weight: $v-font-weight + 200;
    }

    .notification-time {
      font-size: round($v-font-size * 0.8);
      color: valo-font-color($v-window-background-color, .5);
    }

  }

  // Need to use normal media queries because Responsive doesn't work for overlay elements just yet
  @media screen and (max-width: 480px) {
    .notifications.v-window {
      left: round($view-padding / 2);
    }
  }


}
